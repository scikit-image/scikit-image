# vim ft=yaml

# After changing this file, check it on:
#   http://lint.travis-ci.org/


language: python

python:
    - 2.6

matrix:
    include:
        - python: 2.7
          env:
            - PYTHON=python
            - PYTHONWARNINGS=all
            - PYTHONX=python
            - PYVER=2.x
        - python: 3.2
          env:
            - PYTHON=python3
            - PYTHONWARNINGS=all
            - PYTHONX=python3
            - PYVER=3.x
    exclude:
        - python: 2.6

virtualenv:
    system_site_packages: true

before_install:
    - export DISPLAY=:99.0
    - sh -e /etc/init.d/xvfb start

    - sudo apt-get update
    - sudo apt-get install $PYTHON-numpy
    - sudo apt-get install $PYTHON-scipy
    - sudo apt-get install libfreeimage3

    - if [[ $PYVER == '2.x' ]]; then
    -   sudo apt-get install $PYTHON-qt4;
    -   sudo apt-get install $PYTHON-matplotlib;
    - fi
    - if [[ $PYVER == '3.x' ]]; then
    -   sudo apt-get install $PYTHON-pyqt4;
    -   pip install --use-mirrors matplotlib;
    - fi

    - pip install --use-mirrors pillow
    - pip install --use-mirrors cython
    - pip install --use-mirrors flake8
    - pip install --use-mirrors six

    - pip install --upgrade --use-mirrors nose
    - pip install --use-mirrors nose-cov
    - pip install --use-mirrors coveralls

    - python check_bento_build.py

install:
    - python setup.py build_ext --inplace

script:
    # Matplotlib settings
    - mkdir $HOME/.matplotlib
    - touch $HOME/.matplotlib/matplotlibrc
    - "echo 'backend : Agg' > $HOME/.matplotlib/matplotlibrc"
    - "echo 'backend.qt4 : PyQt4' >> $HOME/.matplotlib/matplotlibrc"

    # Run all tests
    - if [[ $PYVER == '3.x' ]]; then
    -   nosetests --exe -v --with-doctest --with-cov --cov skimage --cov-config=.coveragerc skimage
    - fi
    - if [[ $PYVER == '2.x' ]]; then
    -   nosetests --exe -v --with-doctest skimage
    - fi
    # Run all doc examples
    - export PYTHONPATH=$(pwd):$PYTHONPATH
    - for f in doc/examples/*.py; do $PYTHONX "$f"; if [ $? -ne 0 ]; then exit 1; fi done
    - for f in doc/examples/applications/*.py; do $PYTHONX "$f"; if [ $? -ne 0 ]; then exit 1; fi done

    # Run pep8 and flake tests
    - flake8 --exit-zero --exclude=test_*,six.py skimage doc/examples viewer_examples

after_success:
    - if [[ $PYVER == '3.x' ]]; then
    -   coveralls
    - fi

