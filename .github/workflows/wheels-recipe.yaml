name: Build and Test Wheels
on:
  workflow_call:
    inputs:
      CIBW_ENVIRONMENT:
        required: false
        type: string
        default: PIP_PREFER_BINARY=1
      CIBW_BUILD_FRONTEND:
        required: false
        type: string
      CIBW_TEST_REQUIRES:
        required: false
        type: string
        default: "-r requirements/default.txt -r requirements/test.txt"
      CIBW_TEST_COMMAND:
        required: false
        type: string
        default: "pytest --pyargs skimage"

env:
  CIBW_BUILD_VERBOSITY: 1
  CIBW_TEST_REQUIRES: ${{ inputs.CIBW_TEST_REQUIRES }}
  CIBW_ENVIRONMENT: ${{ inputs.CIBW_ENVIRONMENT }}
  CIBW_BUILD_FRONTEND: ${{ inputs.CIBW_BUILD_FRONTEND }}
  CIBW_TEST_COMMAND: ${{inputs.CIBW_TEST_COMMAND }}

permissions:
  contents: read

jobs:
  build_linux_wheels:
    name: Build python ${{ matrix.cibw_python }} ${{ matrix.cibw_arch }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest]
        cibw_python: ["cp310-*", "cp311-*", "cp312-*", "cp313-*", "cp313t-*"]
        cibw_manylinux: [manylinux2014]
        cibw_arch: ["x86_64"]
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: actions/setup-python@v5
        name: Install Python
        with:
          python-version: "3.12"
          cache: "pip"
          cache-dependency-path: "requirements/*.txt"
      - name: Install cibuildwheel
        run: python -m pip install cibuildwheel
      - name: Setup free-threaded environment
        if: endsWith(matrix.cibw_python, 't-*')
        run: |
          NIGHTLY_PIP_ARGS="--pre --extra-index-url https://pypi.anaconda.org/scientific-python-nightly-wheels/simple --only-binary :all:"
          TEST_COMMAND="PYTHON_GIL=0 pytest --pyargs skimage"
          echo "CIBW_PRERELEASE_PYTHONS=1" >> "$GITHUB_ENV"
          echo "CIBW_FREE_THREADED_SUPPORT=1" >> "$GITHUB_ENV"
          # Remove once Cython is out that supports free-threaded build
          echo "CIBW_BUILD_FRONTEND=pip; args: $NIGHTLY_PIP_ARGS" >> $GITHUB_ENV
          echo "CIBW_TEST_COMMAND=$TEST_COMMAND" >> "$GITHUB_ENV"
      - name: Build the wheel
        run: python -m cibuildwheel --output-dir dist
        env:
          CIBW_BUILD: ${{ matrix.cibw_python }}
          CIBW_ARCHS_LINUX: ${{ matrix.cibw_arch }}
          CIBW_SKIP: "*-musllinux_*"
          CIBW_MANYLINUX_X86_64_IMAGE: ${{ matrix.cibw_manylinux }}
          CIBW_MANYLINUX_I686_IMAGE: ${{ matrix.cibw_manylinux }}
          CIBW_ENVIRONMENT_PASS_LINUX: SKIMAGE_LINK_FLAGS
          SKIMAGE_LINK_FLAGS: "-Wl,--strip-debug"
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-linux-${{ matrix.cibw_arch }}-${{ strategy.job-index }}
          path: ./dist/*.whl
