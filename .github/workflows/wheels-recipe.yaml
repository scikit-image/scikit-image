name: Build and Test Wheels
on:
  workflow_call:

permissions:
  contents: read

env:
  COLUMNS: 120

jobs:
  build_macos_wheel:
    name: Build python ${{ matrix.build }} ${{ matrix.cibw_arch }}  wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
            macos-13,
            macos-latest, # ARM-version of MacOS
          ]
        build: ["cp31{1,2}*", "cp313*", "cp314*"]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_BUILD: ${{ matrix.build }}
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}-${{ github.job }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_windows_wheel:
    name: Build python ${{ matrix.build }} ${{ matrix.cibw_arch }}  wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [
            windows-latest,
            # windows-11-arm, # need a separate PR for this, problem with python verison discovery
          ]
        build: ["cp31{1,2}*", "cp313*", "cp314*"]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_BUILD: ${{ matrix.build }}
          CC: clang-cl
          CXX: clang-cl
          LDFLAGS: "-Wl,-S"
          CIBW_SKIP: "*-win32 cp314t*" # bug in compilation
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}-${{ github.job }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_wheel_linux:
    name: Build python ${{ matrix.build }} ${{ matrix.cibw_arch }} wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-22.04-arm]
        build:
          [
            "cp31{1,2}*manylinux*",
            "cp313*manylinux*",
            "cp314*manylinux*",
            "cp31{1,2}*musllinux*",
            "cp313*musllinux*",
            "cp314*musllinux*",
          ]

    steps:
      - uses: actions/checkout@v5
        with:
          fetch-depth: 0
          persist-credentials: false
      - uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_BUILD: ${{ matrix.build }}
      - uses: actions/upload-artifact@v4
        with:
          name: wheels-${{ matrix.os }}-${{ matrix.arch }}-${{ github.job }}-${{ strategy.job-index }}
          path: ./wheelhouse/*.whl

  build_pyodie_wheel:
    name: Build python pyodide on ubuntu-latest
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Build and test scikit-image for Pyodide
        uses: pypa/cibuildwheel@v3.1.4
        env:
          CIBW_PLATFORM: pyodide
