name: Build Wheels and Release
on:
  push:
    tags:
      - v*
    branches:
      - maintenance/**

env:
  CIBW_BUILD_VERBOSITY: 2
  CIBW_TEST_REQUIRES: "-r requirements/default.txt -r requirements/test.txt"
  CIBW_TEST_COMMAND: pytest --pyargs skimage
  CIBW_ENVIRONMENT: PIP_PREFER_BINARY=1

permissions:
  contents: read

jobs:
  call-workflow-build-wheels:
    uses: ./.github/workflows/wheels_recipe.yml

  deploy:
    permissions:
      contents: write # for softprops/action-gh-release to create GitHub release
    name: Release
    needs: call-workflow-build-wheels
    if: github.repository_owner == 'scikit-image' && startsWith(github.ref, 'refs/tags/v') && always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: actions/setup-python@v4
        name: Install Python
        with:
          python-version: "3.9"

      - name: Install Twine
        run: |
          pip install twine

      - uses: actions/download-artifact@v3
        id: download
        with:
          name: wheels
          path: ./dist

      - name: Publish the source distribution on PyPI
        run: |
          SK_VERSION=$(git describe --tags)
          source tools/github/before_install.sh
          python -m build --no-isolation --skip-dependency-check --sdist .
          ls -la ${{ github.workspace }}/dist
          # We prefer to release wheels before source because otherwise there is a
          # small window during which users who pip install scikit-image will require compilation.
          twine upload ${{ github.workspace }}/dist/*.whl
          twine upload ${{ github.workspace }}/dist/scikit_image-${SK_VERSION:1}.tar.gz
        env:
          TWINE_USERNAME: ${{ secrets.TWINE_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.TWINE_PASSWORD }}

      - name: Github release
        uses: softprops/action-gh-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_REPOSITORY: ${{ github.repository }}
