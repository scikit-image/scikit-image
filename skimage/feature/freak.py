import numpy as np

from skimage.transform import integral_image
from skimage.feature.util import _mask_border_keypoints
from skimage.util import img_as_float


# Constants
n = [6, 6, 6, 6, 6, 6, 6, 1]
BIG_RADIUS = 2./3
SMALL_RADIUS = 2./24
unit_space = (BIG_RADIUS - SMALL_RADIUS) / 21
radius = [BIG_RADIUS, BIG_RADIUS - 6 * unit_space, BIG_RADIUS - 11 * unit_space, BIG_RADIUS - 15 * unit_space, BIG_RADIUS - 18 * unit_space, BIG_RADIUS - 20 * unit_space, SMALL_RADIUS, 0.0]

radius_stretched = []
for i in range(8):
    radius_stretched = radius_stretched + [radius[i]] * n[i]


def _get_pattern():
    pattern = []
    for i in range(8):
        for j in range(n[i]):
            beta = (np.pi / n[i]) * (i % 2)
            alpha = j * 2 * np.pi / n[i] + beta 
            pattern.append([radius[i] * np.cos(alpha) * 22, radius[i] * np.sin(alpha) * 22])

    pattern = np.asarray(pattern, dtype=np.intp)
    pattern = np.round(pattern)
    return pattern


def _get_freak_orientation(image, keypoint, pattern):
    opos0 = pattern[orientation_pairs[:, 0]] + keypoint
    opos1 = pattern[orientation_pairs[:, 1]] + keypoint
    intensity_diff = image[opos0[:, 0], opos0[:, 1]] - image[opos1[:, 0], opos1[:, 1]]
    directions = opos0 - opos1
    directions_abs = np.sqrt(directions[:, 0] ** 2 + directions[:, 1] ** 2)
    x_dir, y_dir = np.sum(directions * (intensity_diff / directions_abs)[:, None], axis=0)
    return np.arctan2(x_dir, y_dir)


# TODO : Cythonize.
def _get_mean_intensity(integral_img, keypoint, rot_pattern):
    x = keypoint[0]
    y = keypoint[1]
    pattern_intensities = []
    for i in range(len(rot_pattern)):
        x_p = x + rot_pattern[i, 0]
        y_p = y + rot_pattern[i, 1]
        t = radius_stretched[i]
        pattern_intensities.append(integral_img[x_p + t, y_p + t] + integral_img[x_p - t - 1, y_p - t] - integral_img[x_p - t - 1, y_p + t] - integral_img[x_p + t, y_p - t - 1])
    return np.asarray(pattern_intensities)


def descriptor_freak(image, keypoints):
    # Prepare the input image. Use the util function once #669  is merged.
    image = np.squeeze(image)
    if image.ndim != 2:
        raise ValueError("Only 2-D gray-scale images supported.")

    image = img_as_float(image)

    # Remove border keypoints
    keypoints = keypoints[_mask_border_keypoints(image, keypoints, 30)]

    # Generate the FREAK pattern of 43 points
    pattern = _get_pattern()

    # Orientation of the keypoints.
    # TODO : Cythonize.
    orientations = np.zeros(keypoints.shape[0])
    for i in range(len(keypoints)):
        orientations[i] = _get_freak_orientation(image, keypoints[i], pattern)

    # Integral image for mean intensities about FREAK pattern points
    integral_img = integral_image(image)

    # Initialize descriptor
    descriptors = np.zeros((keypoints.shape[0], 512), dtype=bool)

    # Computing descriptor around each keypoint
    # TODO : Cythonize.
    for i in range(len(keypoints)):
        # Rotate the pattern
        a = np.cos(orientations[i])
        b = np.sin(orientations[i])
        rot_matrix = [[b, a], [a, -b]]
        rot_pattern = np.dot(pattern, rot_matrix)

        # Mean / Gaussian intensity at 43 points
        pattern_intensities = _get_mean_intensity(integral_img, keypoints[i], rot_pattern)
        pos0 = best_pairs[:, 0]
        pos1 = best_pairs[:, 1]
        descriptors[i, :] = pattern_intensities[pos0] < pattern_intensities[pos1]
    return descriptors, keypoints


# 45 pairs for calculating keypoint orientation. Taken from OpenCV.
orientation_pairs = np.array([[ 0,  3],
       [ 1,  4],
       [ 2,  5],
       [ 0,  2],
       [ 1,  3],
       [ 2,  4],
       [ 3,  5],
       [ 4,  0],
       [ 5,  1],
       [ 6,  9],
       [ 7, 10],
       [ 8, 11],
       [ 6,  8],
       [ 7,  9],
       [ 8, 10],
       [ 9, 11],
       [10,  6],
       [11,  7],
       [12, 15],
       [13, 16],
       [14, 17],
       [12, 14],
       [13, 15],
       [14, 16],
       [15, 17],
       [16, 12],
       [17, 13],
       [18, 21],
       [19, 22],
       [20, 23],
       [18, 20],
       [19, 21],
       [20, 22],
       [21, 23],
       [22, 18],
       [23, 19],
       [24, 27],
       [25, 28],
       [26, 29],
       [30, 33],
       [31, 34],
       [32, 35],
       [36, 39],
       [37, 40],
       [38, 41]], dtype=np.uint8)


# Best 512 pairs out 903 ppossible pairs. Taken from OpenCV
best_pairs = np.array([[28, 26],
       [29, 25],
       [40, 38],
       [32, 15],
       [19, 10],
       [10,  7],
       [25, 11],
       [42, 13],
       [39, 33],
       [33, 15],
       [38, 16],
       [21, 20],
       [29, 11],
       [20, 15],
       [ 5,  1],
       [33, 32],
       [17, 13],
       [23, 12],
       [ 9,  3],
       [25,  6],
       [18, 12],
       [41, 37],
       [22, 19],
       [ 4,  2],
       [11,  6],
       [ 6,  0],
       [11,  0],
       [38, 14],
       [ 9,  8],
       [29,  6],
       [34, 31],
       [16, 14],
       [39, 20],
       [37, 29],
       [36, 30],
       [40,  2],
       [35, 30],
       [31, 22],
       [33, 21],
       [32, 20],
       [23, 18],
       [36, 35],
       [39, 21],
       [28, 14],
       [19,  7],
       [40, 16],
       [39, 32],
       [ 8,  3],
       [37,  6],
       [41, 25],
       [33, 20],
       [40, 14],
       [37, 11],
       [36, 24],
       [22, 10],
       [41, 11],
       [21, 15],
       [22,  7],
       [41, 29],
       [13,  5],
       [37, 25],
       [31, 19],
       [41,  6],
       [38,  4],
       [16,  2],
       [32, 21],
       [34, 22],
       [38, 28],
       [26,  3],
       [26, 14],
       [34, 10],
       [31, 10],
       [28, 16],
       [31,  7],
       [34, 19],
       [28,  3],
       [17,  1],
       [14,  2],
       [28,  2],
       [26,  2],
       [35, 24],
       [38, 26],
       [40, 28],
       [21,  8],
       [21,  3],
       [30, 24],
       [17,  5],
       [40, 26],
       [26, 16],
       [14,  4],
       [28,  4],
       [34,  7],
       [16,  4],
       [39,  9],
       [20,  3],
       [39,  8],
       [38,  3],
       [41, 23],
       [13,  1],
       [20,  9],
       [25, 17],
       [26,  4],
       [39, 27],
       [20,  8],
       [14,  9],
       [31,  1],
       [35, 18],
       [13,  0],
       [34,  1],
       [40,  3],
       [37, 23],
       [17,  0],
       [41, 18],
       [14,  3],
       [17,  6],
       [18, 11],
       [37, 13],
       [21,  9],
       [29, 13],
       [27, 15],
       [29, 12],
       [29, 17],
       [12, 11],
       [13, 11],
       [32, 27],
       [23,  6],
       [37, 17],
       [25, 12],
       [33, 27],
       [ 6,  5],
       [31,  5],
       [37, 18],
       [16,  3],
       [30, 23],
       [30, 18],
       [41, 13],
       [12,  6],
       [15,  8],
       [23,  0],
       [15,  3],
       [25, 13],
       [ 7,  4],
       [18,  0],
       [36, 18],
       [29,  5],
       [35, 12],
       [35, 23],
       [16,  8],
       [25,  5],
       [22,  1],
       [25,  1],
       [13,  6],
       [11,  1],
       [23, 11],
       [27, 20],
       [10,  1],
       [29,  1],
       [27,  9],
       [ 9,  2],
       [14,  8],
       [19,  5],
       [38,  7],
       [15,  9],
       [34, 17],
       [12,  0],
       [27, 21],
       [36, 23],
       [16,  9],
       [27,  8],
       [29, 18],
       [18,  6],
       [41,  1],
       [ 5,  0],
       [25, 23],
       [28, 15],
       [ 3,  2],
       [26, 15],
       [42, 30],
       [ 4,  3],
       [40, 10],
       [10,  2],
       [ 1,  0],
       [19,  4],
       [26, 21],
       [22,  5],
       [ 7,  5],
       [19,  1],
       [17, 11],
       [34, 13],
       [34,  0],
       [ 8,  4],
       [24, 18],
       [29, 23],
       [38, 21],
       [39, 14],
       [28, 20],
       [40,  7],
       [24, 12],
       [24, 23],
       [39, 28],
       [34,  4],
       [39, 26],
       [38, 19],
       [39, 16],
       [21, 14],
       [31,  0],
       [38, 20],
       [32,  2],
       [31,  2],
       [22,  4],
       [16,  7],
       [40, 22],
       [30, 11],
       [22,  2],
       [33, 16],
       [31, 17],
       [40, 20],
       [25, 18],
       [ 6,  1],
       [33,  4],
       [40, 21],
       [30,  6],
       [33, 26],
       [19,  2],
       [11,  5],
       [33,  2],
       [38, 10],
       [31,  4],
       [ 8,  2],
       [21,  2],
       [36,  0],
       [42, 38],
       [18, 17],
       [23, 13],
       [40, 19],
       [13, 10],
       [10,  4],
       [32, 16],
       [28, 21],
       [ 7,  2],
       [32,  4],
       [15,  2],
       [32, 28],
       [13, 12],
       [20,  4],
       [17,  7],
       [16, 15],
       [20,  2],
       [20, 16],
       [26, 20],
       [17, 12],
       [12,  5],
       [15, 14],
       [14, 10],
       [34,  2],
       [42,  9],
       [18,  5],
       [23,  1],
       [21,  4],
       [24,  0],
       [30, 29],
       [26,  7],
       [38, 22],
       [19, 17],
       [28,  7],
       [ 7,  3],
       [31, 11],
       [ 9,  4],
       [22,  0],
       [35, 25],
       [19,  0],
       [23,  5],
       [12,  1],
       [15,  4],
       [41, 24],
       [22, 13],
       [19, 16],
       [28, 10],
       [37, 35],
       [37, 24],
       [10,  5],
       [ 4,  1],
       [41, 30],
       [31, 14],
       [10,  3],
       [32, 26],
       [ 7,  1],
       [18,  1],
       [ 5,  2],
       [36, 29],
       [38, 33],
       [36, 25],
       [34, 16],
       [38, 34],
       [41, 10],
       [40, 31],
       [19,  3],
       [ 7,  0],
       [22,  6],
       [26, 10],
       [27,  2],
       [22,  3],
       [10,  8],
       [23, 17],
       [11,  7],
       [19, 11],
       [10,  0],
       [19,  6],
       [22, 14],
       [40, 32],
       [37,  7],
       [27,  4],
       [33, 28],
       [35, 17],
       [18, 13],
       [20, 14],
       [10,  9],
       [22, 17],
       [27, 14],
       [21, 16],
       [22, 11],
       [30, 17],
       [37, 34],
       [37, 19],
       [34, 12],
       [ 5,  4],
       [41, 22],
       [31, 16],
       [31,  3],
       [40,  1],
       [34,  3],
       [29, 10],
       [19,  8],
       [28, 27],
       [ 8,  7],
       [40, 39],
       [35, 13],
       [35, 29],
       [27, 16],
       [14,  7],
       [36, 13],
       [30, 13],
       [ 2,  1],
       [30, 25],
       [37, 10],
       [30,  5],
       [22,  9],
       [16, 10],
       [17, 10],
       [19, 13],
       [19, 14],
       [29, 24],
       [11, 10],
       [40, 27],
       [27, 26],
       [13,  4],
       [16,  1],
       [38,  5],
       [22,  8],
       [25, 10],
       [17,  2],
       [35,  1],
       [38, 27],
       [34, 14],
       [31, 12],
       [41, 31],
       [40, 17],
       [22, 16],
       [ 7,  6],
       [13,  7],
       [34, 25],
       [25,  7],
       [39, 38],
       [26,  1],
       [31, 29],
       [41, 36],
       [25, 24],
       [41,  7],
       [14,  5],
       [39,  7],
       [ 5,  3],
       [28, 19],
       [16,  5],
       [37, 22],
       [37, 36],
       [14,  1],
       [24, 17],
       [38, 13],
       [24,  1],
       [17,  4],
       [15,  7],
       [ 3,  1],
       [13,  2],
       [41, 35],
       [41, 19],
       [ 2,  0],
       [29,  7],
       [26, 22],
       [34, 23],
       [31, 28],
       [24, 13],
       [37, 30],
       [ 6,  4],
       [39, 10],
       [28,  1],
       [12, 10],
       [12,  7],
       [15, 10],
       [ 4,  0],
       [34, 29],
       [19, 12],
       [38, 31],
       [20,  7],
       [31, 18],
       [21,  7],
       [26, 19],
       [26,  5],
       [28, 22],
       [19, 15],
       [22, 12],
       [34, 26],
       [21, 10],
       [40,  0],
       [20, 10],
       [40, 13],
       [22, 15],
       [41,  4],
       [ 9,  5],
       [38, 32],
       [34, 18],
       [13,  3],
       [38,  0],
       [25, 22],
       [39, 19],
       [38, 17],
       [17,  3],
       [31, 15],
       [31, 25],
       [14,  0],
       [40, 34],
       [40, 33],
       [18, 10],
       [17, 16],
       [31, 23],
       [39, 22],
       [23, 10],
       [29, 19],
       [29,  4],
       [34, 15],
       [16,  0],
       [25, 19],
       [37,  2],
       [17, 14],
       [18,  7],
       [25,  2],
       [31, 26],
       [32, 19],
       [23,  7],
       [17,  9],
       [29, 22],
       [14,  6],
       [22, 20],
       [28, 17],
       [23, 19],
       [22, 21],
       [ 6,  3],
       [15,  1],
       [27,  7],
       [41, 34],
       [31, 20],
       [17,  8],
       [33, 22],
       [16, 11],
       [16, 13],
       [28,  0],
       [12,  2],
       [14, 11],
       [14, 13],
       [11,  3],
       [27, 10],
       [23, 22],
       [20, 19],
       [37, 31],
       [34, 21],
       [26, 13],
       [39,  1],
       [34, 28],
       [26,  0],
       [29,  2],
       [21, 19],
       [ 8,  0],
       [25,  4],
       [20,  1],
       [19, 18],
       [15,  5],
       [16,  6],
       [31, 21],
       [21,  1],
       [33, 19],
       [33,  5],
       [12,  4],
       [21,  5],
       [37,  4],
       [22, 18],
       [ 9,  0],
       [34, 20],
       [28, 11],
       [35, 10],
       [26,  6],
       [32, 22],
       [30,  7],
       [41,  2]], dtype=np.uint8)
