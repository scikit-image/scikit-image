[project]
name = "scikit-image"
license = {file = "LICENSE.txt"}
description = "Image processing in Python"
requires-python = ">=3.8"
readme = "README.md"
classifiers = [
    'Development Status :: 4 - Beta',
    'Environment :: Console',
    'Intended Audience :: Developers',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: BSD License',
    'Programming Language :: C',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3',
    'Programming Language :: Python :: 3.8',
    'Programming Language :: Python :: 3.9',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3 :: Only',
    "Topic :: Software Development :: Libraries",
    'Topic :: Scientific/Engineering',
    'Operating System :: Microsoft :: Windows',
    'Operating System :: POSIX',
    'Operating System :: Unix',
    'Operating System :: MacOS',
]
dynamic = ['version']
dependencies = []
maintainers = [
  {name = 'scikit-image developers', email = 'skimage-core@discuss.scientific-python.org'}
]

[project.optional-dependencies]

[project.urls]
homepage = "https://scikit-image.org"
documentation = "https://scikit-image.org/docs/stable"
source = "https://github.com/scikit-image/scikit-image"
download = "https://pypi.org/project/scikit-image/#files"
tracker = "https://github.com/scikit-image/scikit-image/issues"

[build-system]
build-backend = "mesonpy"
requires = [
    # Also update `requirements/build.txt`

    "meson-python>=0.13",
    # `wheel` is needed for non-isolated builds, given that `meson-python`
    # doesn't list it as a runtime requirement (at least in 0.10.0)
    # See https://github.com/FFY00/meson-python/blob/main/pyproject.toml#L4
    "wheel",
    "setuptools>=67",
    "packaging>=21",
    "Cython>=0.29.32",
    "pythran",
    "lazy_loader>=0.2",

    # We follow scipy for much of these pinnings
    # https://github.com/scipy/scipy/blob/main/pyproject.toml

    # On Windows we need to avoid 1.21.6, 1.22.0 and 1.22.1 because they were
    # built with vc142. 1.22.3 is the first version that has 32-bit Windows
    # wheels *and* was built with vc141. So use that:
    "numpy==1.22.3; python_version=='3.10' and platform_system=='Windows' and platform_python_implementation != 'PyPy'",

    # default numpy requirements
    "numpy==1.21.1; python_version=='3.8' and platform_python_implementation != 'PyPy'",
    "numpy==1.21.1; python_version=='3.9' and platform_python_implementation != 'PyPy'",
    "numpy==1.21.6; python_version=='3.10' and platform_system != 'Windows' and platform_python_implementation != 'PyPy'",
    "numpy==1.23.3; python_version=='3.11' and platform_python_implementation != 'PyPy'",

    # For Python versions which aren't yet officially supported,
    # we specify an unpinned NumPy which allows source distributions
    # to be used and allows wheels to be used as soon as they
    # become available.
    "numpy; python_version>='3.12'",
    "numpy; python_version>='3.8' and platform_python_implementation=='PyPy'",
]

[tool.spin]
package = 'skimage'

[tool.spin.commands]
"Build" = ["spin.build", "spin.test", ".spin/cmds.py:sdist"]
"Environments" = ["spin.shell", "spin.ipython", "spin.python"]
"Documentation" = [".spin/cmds.py:docs"]
"Metrics" = [".spin/cmds.py:asv", ".spin/cmds.py:coverage"]

[tool.ruff]
line-length = 88
select = ["F", "E", "W", "UP"]
ignore = ["E501", "E741", "E712"]
exclude = [
    ".git",
    ".ruff_cache",
    "build",
    "build-install",
    "dist",
    "doc/source/auto_examples"
]
target-version = "py38"
# Allow unused variables when underscore-prefixed.
#dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.per-file-ignores]
"**/__init__.py" = ["E402", "F401", "F403", "F405"]
"**/__init__.pyi" = ["E402", "F401", "F403", "F405"]
"skimage/_shared/testing.py" = ["F401"]
"doc/examples/**/*.py" = ["E402"]

[tool.ruff.pydocstyle]
convention = "numpy"

[tool.pytest]
python_files = ["benchmark_*.py", "test_*.py"]
python_classes = ["Test*", "*Suite"]
python_functions = ["time_*", "test_*", "peakmem_*"]

[tool.coverage.run]
omit = ["*/tests/*"]
