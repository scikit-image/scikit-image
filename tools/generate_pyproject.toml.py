import os


def parse_requirements_file(filename):
    with open(filename) as fid:
        requires = [l.strip() for l in fid.readlines() if not l.startswith("#")]

    return requires


dependencies = {
    dep: parse_requirements_file("requirements/" + dep + ".txt")
    for dep in ["build", "data", "default", "developer", "docs", "optional", "test"]
}
newline = "\n"


def list_deps(target):
    return f"""{newline.join(f'    "{dep}",' for dep in dependencies[target])}"""


filename = "pyproject.toml"

project_dependencies = f"""dependencies = [
{list_deps("default")}
]
"""

project_optional_dependencies = f"""
[project.optional-dependencies]
data = [
{list_deps("data")}
]
developer = [
{list_deps("developer")}
]
docs = [
{list_deps("docs")}
]
optional = [
{list_deps("optional")}
]
test = [
{list_deps("test")}
]
"""

with open("tools/pyproject.header") as file:
    project_header = file.read()

with open("tools/pyproject.footer") as file:
    project_footer = file.read()

project_banner = f"""
{"#" * 80}
# DO NOT EDIT
# AUTOGENERATED BY
#
#     $ python tools/generate_pyproject.toml.py
#
{"#" * 80}

"""

with open(filename, "w") as file:
    file.write(project_banner)
    file.write(project_header)
    file.write(project_dependencies)
    file.write(project_optional_dependencies)
    file.write(project_footer)
