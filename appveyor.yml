# AppVeyor.com is a Continuous Integration service to build and run tests under
# Windows

environment:
  global:
    # SDK v7.0 MSVC Express 2008's SetEnv.cmd script will fail if the
    # /E:ON and /V:ON options are not enabled in the batch script intepreter
    # See: http://stackoverflow.com/a/13751649/163740
    CMD_IN_ENV: "cmd /E:ON /V:ON /C .\\tools\\appveyor\\run_with_env.cmd"

  matrix:
    - PYTHON: "C:\\Python27-conda32"
      PYTHON_VERSION: "2.7"
      PYTHON_ARCH: "32"

   # disable other builds until they can be run in parallel
    #- PYTHON: "C:\\Python27-conda64"
    #  PYTHON_VERSION: "2.7"
    #  PYTHON_ARCH: "64"

    #- PYTHON: "C:\\Python35-conda32"
    #  PYTHON_VERSION: "3.5"
    #  PYTHON_ARCH: "32"

    #- PYTHON: "C:\\Python35-conda64"
    #  PYTHON_VERSION: "3.5"
    #  PYTHON_ARCH: "64"

install:
  - ECHO "Filesystem root:"
  - ps: "ls \"C:/\""
    
  # Install Python and all the required packages.
  - "powershell ./tools/appveyor/install.ps1"

  # Prepend newly installed Python to the PATH of this build
  # (this cannot be done from inside the powershell script as it would require
  # to restart the parent CMD process).
  - "SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%"

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  # Get stdint headers needed by tifffile.c.
  - "curl https://raw.githubusercontent.com/chemeris/msinttypes/master/inttypes.h -o skimage/external/tifffile/inttypes.h"
  - "curl https://raw.githubusercontent.com/chemeris/msinttypes/master/stdint.h -o skimage/external/tifffile/stdint.h"

  # Install the build and runtime dependencies of the project.
  - "%CMD_IN_ENV% pip install -v -r requirements.txt"
  - "%CMD_IN_ENV% python setup.py bdist_wheel bdist_wininst"
  - ps: "ls dist"

  # Install the generated wheel package to test it
  - "pip install --pre --no-index --find-links dist/ scikit-image"

# Not a .NET project, we build scikit-image in the install step instead
build: false

test_script:
  # Build the docs
  - pip install sphinx
  - SET PYTHON=%PYTHON%\\python.exe && cd doc && make html

  # Change to a non-source folder to make sure we run the tests on the
  # installed library.
  - "cd C:\\"

    # Use the Agg backend in Matplotlib
  -  echo backend:Agg > matplotlibrc

  # Run unit tests with pytest
  - "python -c \"import pytest; pytest.main(['skimage'])\""

artifacts:
  # Archive the generated wheel package in the ci.appveyor.com build report.
  - path: dist\*

#on_success:
#  - TODO: upload the content of dist/*.whl to a public wheelhouse
