Extension of Frangi filter to 3D data and other ridge detection filters

Correct and extend available 2D Frangi (vesselness) filter [1] to 3D data. 
Together with the Hybrid Hessian filter, move it to a ridge detection module 
with two new, additional filters. The new Meijering (neuriteness) filter [2] is 
applicable to nD data and the new Sato (tubeness) filter [3] is applicable to 
2D and 3D data. Both are similar to the Frangi filter but rely on different 
combinations of eigenvalues of the Hessian matrix to detect ridge structures.


Implement the following changes:

 - Correct available 2D Frangi filter by using Hessian eigenvalues which are 
sorted by their absolute values (not by value), as described in [1].

 - Change keyword arguments 'beta1' and 'beta2' in the available Frangi and 
Hessian filters to 'beta' and 'gamma' for better agreement with the original 
description in [1]. Add deprecation warnings for the old keywords.

 - Correct effect of keyword argument 'black_ridges' in the available 2D Frangi 
filter, as noted in issue #2700. As proposed in the comments, solve this issue 
by inverting the image to detect light ridges on dark backgrounds.

 - Complete partial references for the available 2D Frangi and Hybrid Hessian 
filters.

 - Remove third, erroneous reference in the doc string of the available 2D 
Frangi filter concerning the Gabor filter.

 - Move the available 2D Frangi and Hybrid Hessian filters to a ridge detection 
module, similar to that for edge detection.

 - Extend Frangi (vesselness) filter to 3D data as described in [1].

 - Add Meijering (neuriteness) filter for nD data [2].

 - Add Sato (tubeness) filter for 2D and 3D data [3].

 - Extend available test suite (test_frangi.py) by tests for the new filters as 
well as 3D data (test_ridges.py).

 - Extend available gallery example (plot_frangi.py) by the new filters as well 
as a comparison of the detection of dark and light ridges, respectively 
(plot_ridge_filter.py).

 - Add new identity filter which accepts arbitrary keywords and returns the 
input image. This is very convenient for automated plotting of different 
filters and comparison to the original image, see gallery example.


Additional note for future contributions:

 - The available Hybrid Hessian filter does not agree with its description in 
[4]. In particular, it should not simply be a thresholded version of the 
Frangi filter but involves different smoothing before the computation of the 
Hessian eigenvalues (cf. equations (2)-(6) in [4]). Moreover, the implemented 
thresholding does not agree with the described one (cf. equation (15) in [4]).

   
Change files:
    
Remove  scikit-image/doc/examples/plot_frangi.py
Add     scikit-image/doc/examples/ridges/plot_ridge_filter.py

Remove  scikit-image/skimage/filters/_frangi.py
Add     scikit-image/skimage/filters/ridges.py

Remove  scikit-image/skimage/filters/tests/test_frangi.py
Add     scikit-image/skimage/filters/tests/test_ridges.py

Add     scikit-image/skimage/filters/_identity.py

Changed scikit-image/skimage/filters/__init__.py


References:

[1] Frangi, A. F., Niessen, W. J., Vincken, K. L., & Viergever, M. A. (1998, 
October). Multiscale vessel enhancement filtering. In International Conference 
on Medical Image Computing and Computer-Assisted Intervention (pp. 130-137). 
Springer Berlin Heidelberg.

[2] Meijering, E., Jacob, M., Sarria, J. C., Steiner, P., Hirling, H., Unser, 
M. (2004). Design and validation of a tool for neurite tracing and analysis in 
fluorescence microscopy images. Cytometry Part A, 58(2), 167-176.

[3] Sato, Y., Nakajima, S., Shiraga, N., Atsumi, H., Yoshida, S., Koller, T., 
..., Kikinis, R. (1998). Three-dimensional multi-scale line filter for 
segmentation and visualization of curvilinear structures in medical images. 
Medical image analysis, 2(2), 143-168.

[4] Ng, C. C., Yap, M. H., Costen, N., & Li, B. (2014, November). Automatic 
wrinkle detection using hybrid Hessian filter. In Asian Conference on Computer 
Vision (pp. 609-622). Springer International Publishing.
