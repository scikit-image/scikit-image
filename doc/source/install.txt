Installing scikit-image
-----------------------
If you are on Mac OS X, simply open the terminal and install scikit-image with
pip::

  pip install scikit-image


For Python 3 use pip3 instead::

  pip3 install scikit-image


For other systems, please read on.


Linux, Mac and Windows
----------------------
An easy, lightweight method to install scikit-image on most platforms is by
using miniconda_. Go over and grab the appropriate miniconda_ version for your
operating system and install it. Once you have miniconda_ installed, open a
terminal and install scikit-image with ``conda``::

  conda install scikit-image


If you prefer *not* to use miniconda, read on for installation instructions
specific to each operating system.


Windows
-------
Scikit-image comes with the Python distributions Anaconda_,
`Enthought Canopy`_ and `Python(x,y)`_. If you install any of
them, scikit-image should already be installed.

.. _Anaconda: https://store.continuum.io/cshop/anaconda/
.. _Enthought Canopy: https://www.enthought.com/products/canopy/
.. _Python(x,y): http://code.google.com/p/pythonxy/wiki/Welcome


If you prefer the regular Python distribution from python.org_, you can
install scikit-image manually by downloading packages. You will need numpy_,
scipy_, and the scikit-image package. You can find the packages in `Cristoph
Gohlke's`_ web page with compiled Python packages. Here are direct links to
the `scipy section`_, `numpy section`_ and `scikit-image section`_. Make sure
you download the right version for your system. E.g., numpy for Python 3.4 64
bit would be ``numpy‑1.9.2+mkl‑cp34‑none‑win_amd64.whl``.

To install Goehlke's packages, use pip::

  pip install wheel
  pip install --find-links path/to/downloaded/packages scikit-image

Here ``--find-links path/to/downloaded/packages`` tells pip to look for
packages not just online, but also in the folder specified. Make sure this
path is where you saved the packages binaries.

It is possible to compile and install scikit-image on Windows from source.
This requires a C compiler (mingw32) and Cython in addition to NumPy.::

  pip install scikit-image


If you experience the error ``Error:unable to find vcvarsall.bat`` it means that
distutils is not correctly configured to use your C compiler. Modify or create
the configuration file ``distutils.cfg`` in your python install's
``lib/distutils`` subdirectory (e.g.,
``C:\Python26\Lib\distutils\distutils.cfg``) to contain::

    [build]
    compiler=mingw32

For more details on compiling in Windows, refer to our continuous integration
`setup script for AppVeyor`_.

.. _miniconda: http://conda.pydata.org/miniconda.html
.. _python.org: http://python.org/
.. _numpy: http://www.numpy.org/
.. _scipy: http://www.scipy.org/
.. _Cristoph Gohlke's: http://www.lfd.uci.edu/~gohlke/pythonlibs/
.. _numpy section: http://www.lfd.uci.edu/~gohlke/pythonlibs/#numpy
.. _scipy section: http://www.lfd.uci.edu/~gohlke/pythonlibs/#scipy
.. _scikit-image section: http://www.lfd.uci.edu/~gohlke/pythonlibs/#scikit-image
.. _setup script for AppVeyor: https://github.com/scikit-image/scikit-image/blob/master/appveyor.yml


Debian and Ubuntu
-----------------
On Debian and Ubuntu install scikit-image with::

  sudo apt-get install python-skimage


Or if you use Python 3::

  sudo apt-get install python3-skimage


On Ubuntu scikit-image is found in the `universe repo`_, and python-skimage can
also be found in the `Neurodebian repository`_. For using the repository
follow the `Neurodebian instructions`_ to add Neurodebian to your system
package manager.

Ubuntu 14.04 LTS ships with version 0.9.3 of scikit-image, so if you need an
up-to-date version you must compile scikit-image yourself. First install the
dependencies::

  sudo apt-get install python-matplotlib python-numpy python-pil python-scipy


or for Python 3::

  sudo apt-get install python3-matplotlib python3-numpy python3-pil python3-scipy


Get compilers::

  sudo apt-get install build-essential cython


Compile and install the latest stable version of scikit-image::

  pip install scikit-image


.. _universe repo: https://help.ubuntu.com/community/Repositories/Ubuntu
.. _Neurodebian repository: http://neuro.debian.net/
.. _Neurodebian instructions: http://neuro.debian.net/#how-to-use-this-repository


Other Unixes
------------
Install binary packages of cython, matplotlib, numpy, pillow and scipy if they
are available in your operating system's package manager. Make sure you have
a C and C++ compilers. Then install scikit-image with pip::

  pip install scikit-image


Upgrading
---------
You can upgrade scikit-image by::

  pip install --upgrade --no-deps scikit-image
  pip install scikit-image # installs new dependencies, if changed


Building with bento
-------------------

``scikit-image`` can also be built using `bento
<http://cournape.github.io/Bento/>`__.  Bento depends on `WAF
<https://code.google.com/p/waf/>`__ for compilation.

Follow the `Bento installation instructions
<http://cournape.github.io/Bento/html/install.html>`__ and `download the WAF
source <http://code.google.com/p/waf/downloads/list>`__.

Tell Bento where to find WAF by setting the ``WAFDIR`` environment variable::

    export WAFDIR=<path/to/waf>

From the ``scikit-image`` source directory::

    bentomaker configure
    bentomaker build -j     # (add -i for in-place build)
    bentomaker install      # (when not builing in-place)

Depending on file permissions, the install commands may need to be run as
sudo.


Install bleeding edge development version
-----------------------------------------

Obtain the source from the git-repository at
http://github.com/scikit-image/scikit-image by running::

  git clone http://github.com/scikit-image/scikit-image

If you do not have git installed on your machine, you can also download a
zipball from https://github.com/scikit-image/scikit-image/zipball/master.

The scikit can be installed using::

  pip install .

If you prefer, you can use a link instead by compiling extensions in-place::

  python setup.py build_ext -i
  pip install -e .


.. include:: ../../DEPENDS.txt
